/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EcoLedger, EcoLedgerInterface } from "../EcoLedger";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "emissionFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ecoScore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ProductAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ecoScore",
        type: "uint256",
      },
    ],
    name: "ProductUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_emissionFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ecoScore",
        type: "uint256",
      },
    ],
    name: "addProduct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProducts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserProducts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "productCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "emissionFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ecoScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newEcoScore",
        type: "uint256",
      },
    ],
    name: "updateEcoScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userProducts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600380546001600160a01b03191633179055600060025561110f806100376000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637acc0b20116100665780637acc0b20146101025780638da5cb5b14610129578063b9db15b414610154578063c59d48471461017a578063fee7f53b1461019d57600080fd5b80631f16653b146100a35780633d527883146100bf578063524a046e146100d2578063570aea8a146100e55780635a18c46a146100ed575b600080fd5b6100ac60025481565b6040519081526020015b60405180910390f35b6100ac6100cd366004610afb565b6101bd565b6100ac6100e0366004610bc8565b6101ee565b6002546100ac565b6101006100fb366004610c62565b6103c8565b005b610115610110366004610c84565b61050b565b6040516100b6989796959493929190610ce3565b60035461013c906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b610167610162366004610c84565b6106f3565b6040516100b69796959493929190610d56565b6101826109dd565b604080519384526020840192909252908201526060016100b6565b6101b06101ab366004610dbf565b610a73565b6040516100b69190610de1565b600160205281600052604060002081815481106101d957600080fd5b90600052602060002001600091509150505481565b6000606482111561021a5760405162461bcd60e51b815260040161021190610e25565b60405180910390fd5b6000831161026a5760405162461bcd60e51b815260206004820181905260248201527f456d697373696f6e20666163746f72206d75737420626520706f7369746976656044820152606401610211565b6002805490600061027a83610e7e565b90915550506002546040805161010081018252888152602080820189905281830188905260608201879052608082018690524260a08301523360c0830152600160e083015260008481529081905291909120815181906102da9082610f20565b50602082015160018201906102ef9082610f20565b50604082015160028201906103049082610f20565b50606082015160038201556080820151600482015560a0820151600582015560c08201516006909101805460e0909301511515600160a01b026001600160a81b03199093166001600160a01b03909216919091179190911790553360008181526001602081815260408084208054938401815584529220018390555182917f389e2ea4847e5fcbaa939d1b97d7f54496bc0331fa6b2020dd23bc42cf2928c7916103b6918b918b918a918a9190610fe0565b60405180910390a29695505050505050565b6000828152602081905260409020600601548290600160a01b900460ff1661042b5760405162461bcd60e51b8152602060048201526016602482015275141c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606401610211565b6000838152602081905260409020600601546001600160a01b031633146104945760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c792070726f64756374206f776e65722063616e207570646174650000006044820152606401610211565b60648211156104b55760405162461bcd60e51b815260040161021190610e25565b6000838152602081905260409081902060048101849055905184917ff9b1d9170fbe32752353e00d62e5276b143166c75aa974030dddfac2895601fe916104fe9190869061102c565b60405180910390a2505050565b60006020819052908152604090208054819061052690610e97565b80601f016020809104026020016040519081016040528092919081815260200182805461055290610e97565b801561059f5780601f106105745761010080835404028352916020019161059f565b820191906000526020600020905b81548152906001019060200180831161058257829003601f168201915b5050505050908060010180546105b490610e97565b80601f01602080910402602001604051908101604052809291908181526020018280546105e090610e97565b801561062d5780601f106106025761010080835404028352916020019161062d565b820191906000526020600020905b81548152906001019060200180831161061057829003601f168201915b50505050509080600201805461064290610e97565b80601f016020809104026020016040519081016040528092919081815260200182805461066e90610e97565b80156106bb5780601f10610690576101008083540402835291602001916106bb565b820191906000526020600020905b81548152906001019060200180831161069e57829003601f168201915b50505050600383015460048401546005850154600690950154939491939092506001600160a01b03811690600160a01b900460ff1688565b60608060606000806000808760008082815260200190815260200160002060060160149054906101000a900460ff166107675760405162461bcd60e51b8152602060048201526016602482015275141c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b6044820152606401610211565b6000898152602081905260408082208151610100810190925280548290829061078f90610e97565b80601f01602080910402602001604051908101604052809291908181526020018280546107bb90610e97565b80156108085780601f106107dd57610100808354040283529160200191610808565b820191906000526020600020905b8154815290600101906020018083116107eb57829003601f168201915b5050505050815260200160018201805461082190610e97565b80601f016020809104026020016040519081016040528092919081815260200182805461084d90610e97565b801561089a5780601f1061086f5761010080835404028352916020019161089a565b820191906000526020600020905b81548152906001019060200180831161087d57829003601f168201915b505050505081526020016002820180546108b390610e97565b80601f01602080910402602001604051908101604052809291908181526020018280546108df90610e97565b801561092c5780601f106109015761010080835404028352916020019161092c565b820191906000526020600020905b81548152906001019060200180831161090f57829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a90046001600160a01b03166001600160a01b03166001600160a01b031681526020016006820160149054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c0015198509850985098509850985098505050919395979092949650565b60025460009081908190818060015b6002548111610a6657600081815260208190526040902060060154600160a01b900460ff1615610a5457600081815260208190526040902060030154610a3290846110c0565b600082815260208190526040902060040154909350610a5190836110c0565b91505b80610a5e81610e7e565b9150506109ec565b5091959094509092509050565b6001600160a01b038116600090815260016020908152604091829020805483518184028101840190945280845260609392830182828015610ad357602002820191906000526020600020905b815481526020019060010190808311610abf575b50505050509050919050565b80356001600160a01b0381168114610af657600080fd5b919050565b60008060408385031215610b0e57600080fd5b610b1783610adf565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610b4c57600080fd5b813567ffffffffffffffff80821115610b6757610b67610b25565b604051601f8301601f19908116603f01168101908282118183101715610b8f57610b8f610b25565b81604052838152866020858801011115610ba857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610be057600080fd5b853567ffffffffffffffff80821115610bf857600080fd5b610c0489838a01610b3b565b96506020880135915080821115610c1a57600080fd5b610c2689838a01610b3b565b95506040880135915080821115610c3c57600080fd5b50610c4988828901610b3b565b9598949750949560608101359550608001359392505050565b60008060408385031215610c7557600080fd5b50508035926020909101359150565b600060208284031215610c9657600080fd5b5035919050565b6000815180845260005b81811015610cc357602081850181015186830182015201610ca7565b506000602082860101526020601f19601f83011685010191505092915050565b6000610100808352610cf78184018c610c9d565b90508281036020840152610d0b818b610c9d565b90508281036040840152610d1f818a610c9d565b60608401989098525050608081019490945260a08401929092526001600160a01b031660c0830152151560e0909101529392505050565b60e081526000610d6960e083018a610c9d565b8281036020840152610d7b818a610c9d565b90508281036040840152610d8f8189610c9d565b60608401979097525050608081019390935260a08301919091526001600160a01b031660c0909101529392505050565b600060208284031215610dd157600080fd5b610dda82610adf565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610e1957835183529284019291840191600101610dfd565b50909695505050505050565b60208082526023908201527f45636f2073636f7265206d757374206265206265747765656e203020616e642060408201526203130360ec1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610e9057610e90610e68565b5060010190565b600181811c90821680610eab57607f821691505b602082108103610ecb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610f1b57600081815260208120601f850160051c81016020861015610ef85750805b601f850160051c820191505b81811015610f1757828155600101610f04565b5050505b505050565b815167ffffffffffffffff811115610f3a57610f3a610b25565b610f4e81610f488454610e97565b84610ed1565b602080601f831160018114610f835760008415610f6b5750858301515b600019600386901b1c1916600185901b178555610f17565b600085815260208120601f198616915b82811015610fb257888601518255948401946001909101908401610f93565b5085821015610fd05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a081526000610ff360a0830188610c9d565b82810360208401526110058188610c9d565b6040840196909652505060608101929092526001600160a01b031660809091015292915050565b60408152600080845461103e81610e97565b8060408601526060600180841660008114611060576001811461107a576110ab565b60ff1985168884015283151560051b8801830195506110ab565b8960005260208060002060005b868110156110a25781548b8201870152908401908201611087565b8a018501975050505b50505050506020929092019290925292915050565b808201808211156110d3576110d3610e68565b9291505056fea2646970667358221220e265faf51a888a21ba7cacd2636a5cf20b9cf64063a9ed5bbbdd0ec07d1fd56264736f6c63430008140033";

type EcoLedgerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcoLedgerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcoLedger__factory extends ContractFactory {
  constructor(...args: EcoLedgerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EcoLedger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EcoLedger__factory {
    return super.connect(runner) as EcoLedger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcoLedgerInterface {
    return new Interface(_abi) as EcoLedgerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EcoLedger {
    return new Contract(address, _abi, runner) as unknown as EcoLedger;
  }
}
