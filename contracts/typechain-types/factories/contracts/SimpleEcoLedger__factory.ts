/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleEcoLedger,
  SimpleEcoLedgerInterface,
} from "../../contracts/SimpleEcoLedger";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "emissionFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ecoScore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ProductAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ecoScore",
        type: "uint256",
      },
    ],
    name: "ProductUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_emissionFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ecoScore",
        type: "uint256",
      },
    ],
    name: "addProduct",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "getProduct",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserProducts",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "products",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "emissionFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ecoScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalProducts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newEcoScore",
        type: "uint256",
      },
    ],
    name: "updateEcoScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userProducts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100408161004b565b50600060015561009b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61122a806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b1461012b5780639b9d326d14610146578063b9db15b41461014f578063c59d484714610175578063f2fde38b14610198578063fee7f53b146101ab57600080fd5b80633d527883146100ae578063524a046e146100d45780635a18c46a146100e7578063715018a6146100fc5780637acc0b2014610104575b600080fd5b6100c16100bc366004610c16565b6101cb565b6040519081526020015b60405180910390f35b6100c16100e2366004610ce3565b6101fc565b6100fa6100f5366004610d7d565b61043e565b005b6100fa61057e565b610117610112366004610d9f565b610592565b6040516100cb989796959493929190610dfe565b6000546040516001600160a01b0390911681526020016100cb565b6100c160015481565b61016261015d366004610d9f565b61077a565b6040516100cb9796959493929190610e71565b61017d610a42565b604080519384526020840192909252908201526060016100cb565b6100fa6101a6366004610eda565b610ad3565b6101be6101b9366004610eda565b610b11565b6040516100cb9190610efc565b600360205281600052604060002081815481106101e757600080fd5b90600052602060002001600091509150505481565b6000808651116102535760405162461bcd60e51b815260206004820152601c60248201527f50726f64756374206e616d652063616e6e6f7420626520656d7074790000000060448201526064015b60405180910390fd5b600083116102b25760405162461bcd60e51b815260206004820152602660248201527f456d697373696f6e20666163746f72206d75737420626520677265617465722060448201526507468616e20360d41b606482015260840161024a565b60648211156102d35760405162461bcd60e51b815260040161024a90610f40565b600180549060006102e383610f99565b909155505060018054604080516101008101825289815260208082018a905281830189905260608201889052608082018790524260a08301523360c083015260e082019490945260008381526002909452922082519192918190610347908261103b565b506020820151600182019061035c908261103b565b5060408201516002820190610371908261103b565b5060608201516003808301919091556080830151600483015560a0830151600583015560c08301516006909201805460e0909401511515600160a01b026001600160a81b03199094166001600160a01b039093169290921792909217905533600081815260209283526040808220805460018101825590835293909120909201839055905182917f389e2ea4847e5fcbaa939d1b97d7f54496bc0331fa6b2020dd23bc42cf2928c79161042c918b918b918a918a91906110fb565b60405180910390a29695505050505050565b600082815260026020526040902060060154600160a01b900460ff1661049f5760405162461bcd60e51b8152602060048201526016602482015275141c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b604482015260640161024a565b6000828152600260205260409020600601546001600160a01b031633146105085760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c792070726f64756374206f776e65722063616e20757064617465000000604482015260640161024a565b60648111156105295760405162461bcd60e51b815260040161024a90610f40565b6000828152600260205260409081902060048101839055905183917ff9b1d9170fbe32752353e00d62e5276b143166c75aa974030dddfac2895601fe9161057291908590611147565b60405180910390a25050565b610586610b7d565b6105906000610baa565b565b6002602052600090815260409020805481906105ad90610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546105d990610fb2565b80156106265780601f106105fb57610100808354040283529160200191610626565b820191906000526020600020905b81548152906001019060200180831161060957829003601f168201915b50505050509080600101805461063b90610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461066790610fb2565b80156106b45780601f10610689576101008083540402835291602001916106b4565b820191906000526020600020905b81548152906001019060200180831161069757829003601f168201915b5050505050908060020180546106c990610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546106f590610fb2565b80156107425780601f1061071757610100808354040283529160200191610742565b820191906000526020600020905b81548152906001019060200180831161072557829003601f168201915b50505050600383015460048401546005850154600690950154939491939092506001600160a01b03811690600160a01b900460ff1688565b6000818152600260205260408120600601546060918291829190819081908190600160a01b900460ff166107e95760405162461bcd60e51b8152602060048201526016602482015275141c9bd91d58dd08191bd95cc81b9bdd08195e1a5cdd60521b604482015260640161024a565b6000888152600260205260408082208151610100810190925280548290829061081190610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461083d90610fb2565b801561088a5780601f1061085f5761010080835404028352916020019161088a565b820191906000526020600020905b81548152906001019060200180831161086d57829003601f168201915b505050505081526020016001820180546108a390610fb2565b80601f01602080910402602001604051908101604052809291908181526020018280546108cf90610fb2565b801561091c5780601f106108f15761010080835404028352916020019161091c565b820191906000526020600020905b8154815290600101906020018083116108ff57829003601f168201915b5050505050815260200160028201805461093590610fb2565b80601f016020809104026020016040519081016040528092919081815260200182805461096190610fb2565b80156109ae5780601f10610983576101008083540402835291602001916109ae565b820191906000526020600020905b81548152906001019060200180831161099157829003601f168201915b50505091835250506003820154602080830191909152600483015460408084019190915260058401546060808501919091526006909401546001600160a01b038116608080860191909152600160a01b90910460ff16151560a0948501528551928601519186015194860151908601519386015160c090960151929f919e50939c50929a5090985091965090945092505050565b60008080808060015b6001548111610ac557600081815260026020526040902060060154600160a01b900460ff1615610ab357600081815260026020526040902060030154610a9190846111db565b600082815260026020526040902060040154909350610ab090836111db565b91505b80610abd81610f99565b915050610a4b565b506001549591945092509050565b610adb610b7d565b6001600160a01b038116610b0557604051631e4fbdf760e01b81526000600482015260240161024a565b610b0e81610baa565b50565b6001600160a01b038116600090815260036020908152604091829020805483518184028101840190945280845260609392830182828015610b7157602002820191906000526020600020905b815481526020019060010190808311610b5d575b50505050509050919050565b6000546001600160a01b031633146105905760405163118cdaa760e01b815233600482015260240161024a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610c1157600080fd5b919050565b60008060408385031215610c2957600080fd5b610c3283610bfa565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c6757600080fd5b813567ffffffffffffffff80821115610c8257610c82610c40565b604051601f8301601f19908116603f01168101908282118183101715610caa57610caa610c40565b81604052838152866020858801011115610cc357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a08688031215610cfb57600080fd5b853567ffffffffffffffff80821115610d1357600080fd5b610d1f89838a01610c56565b96506020880135915080821115610d3557600080fd5b610d4189838a01610c56565b95506040880135915080821115610d5757600080fd5b50610d6488828901610c56565b9598949750949560608101359550608001359392505050565b60008060408385031215610d9057600080fd5b50508035926020909101359150565b600060208284031215610db157600080fd5b5035919050565b6000815180845260005b81811015610dde57602081850181015186830182015201610dc2565b506000602082860101526020601f19601f83011685010191505092915050565b6000610100808352610e128184018c610db8565b90508281036020840152610e26818b610db8565b90508281036040840152610e3a818a610db8565b60608401989098525050608081019490945260a08401929092526001600160a01b031660c0830152151560e0909101529392505050565b60e081526000610e8460e083018a610db8565b8281036020840152610e96818a610db8565b90508281036040840152610eaa8189610db8565b60608401979097525050608081019390935260a08301919091526001600160a01b031660c0909101529392505050565b600060208284031215610eec57600080fd5b610ef582610bfa565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610f3457835183529284019291840191600101610f18565b50909695505050505050565b60208082526023908201527f45636f2073636f7265206d757374206265206265747765656e203020616e642060408201526203130360ec1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600060018201610fab57610fab610f83565b5060010190565b600181811c90821680610fc657607f821691505b602082108103610fe657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561103657600081815260208120601f850160051c810160208610156110135750805b601f850160051c820191505b818110156110325782815560010161101f565b5050505b505050565b815167ffffffffffffffff81111561105557611055610c40565b611069816110638454610fb2565b84610fec565b602080601f83116001811461109e57600084156110865750858301515b600019600386901b1c1916600185901b178555611032565b600085815260208120601f198616915b828110156110cd578886015182559484019460019091019084016110ae565b50858210156110eb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60a08152600061110e60a0830188610db8565b82810360208401526111208188610db8565b6040840196909652505060608101929092526001600160a01b031660809091015292915050565b60408152600080845461115981610fb2565b806040860152606060018084166000811461117b5760018114611195576111c6565b60ff1985168884015283151560051b8801830195506111c6565b8960005260208060002060005b868110156111bd5781548b82018701529084019082016111a2565b8a018501975050505b50505050506020929092019290925292915050565b808201808211156111ee576111ee610f83565b9291505056fea26469706673582212209a862fdd9267ef31db8333f0d041a05650200a789be9e3cc19a5e0a6849b949564736f6c63430008140033";

type SimpleEcoLedgerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleEcoLedgerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleEcoLedger__factory extends ContractFactory {
  constructor(...args: SimpleEcoLedgerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimpleEcoLedger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimpleEcoLedger__factory {
    return super.connect(runner) as SimpleEcoLedger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleEcoLedgerInterface {
    return new Interface(_abi) as SimpleEcoLedgerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleEcoLedger {
    return new Contract(address, _abi, runner) as unknown as SimpleEcoLedger;
  }
}
